version: '3.6'
services:
  node:
    restart: always
    build: ./node-example
    ports:
      - 3001:3000
    volumes:
      - ./node-example:/code
  telegraf:
    image: telegraf:1.18-alpine
    env_file: .env
    volumes:
    - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    - /var/run/docker.sock:/var/run/docker.sock
    user: telegraf:999
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
    - '127.0.0.1:8125:8125/udp'

  influxdb:
    image: influxdb:1.8-alpine
    env_file: .env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb

  grafana:
    image: grafana/grafana:8.0.2
    depends_on:
      - influxdb
    env_file: .env
    links:
      - influxdb
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/

  mongo:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongodb:/data/db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - cluster.routing.allocation.disk.threshold_enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200 
volumes:
  grafana_data: {}
  influxdb_data: {}
  elasticsearch-data: {}
  mongodb: {}